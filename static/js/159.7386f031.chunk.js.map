{"version":3,"file":"static/js/159.7386f031.chunk.js","mappings":"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","sources":["components/FormSection/Form.styled.js","components/FormSection/Form.jsx","components/FilterSection/Filter.jsx","components/ListContact/ListContact.styled.js","components/ListContact/ListContact.jsx","redux/contacts/selectors.js","components/PhoneBook/PhoneBook.jsx","Page/UserMenu/UserMenu.styled.js","Page/UserMenu/UserMenu.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Eror = styled.p`\n  font-family: ${p => p.theme.fonts.monospace};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.muted};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport Notiflix from 'notiflix';\nimport * as Yup from 'yup';\nimport { Button } from '@mui/material';\nimport 'yup-phone';\nimport { Box } from 'commonStyle/Common.styled';\nimport { Eror } from './Form.styled';\nimport { Input } from 'commonStyle/Common.styled';\nimport { fetchAddContacts } from 'redux/contacts/operations';\nimport { selectContact } from 'redux/contacts/contactsSlice';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required(),\n  number: Yup.string().phone('ua').required(),\n});\n\nconst initialValue = { name: '', number: '' };\n\nexport const Formes = () => {\n  const dispatch = useDispatch();\n  const contact = useSelector(selectContact);\n\n  const hendleSubmit = (values, { resetForm }) => {\n    addContacsFormSubmit(values);\n    resetForm();\n  };\n\n  const addContacsFormSubmit = value => {\n    if (contact.find(item => item.name === value.name)) {\n      return Notiflix.Notify.warning(`${value.name} is already is contacts`);\n    } else {\n      dispatch(fetchAddContacts(value));\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValue}\n      onSubmit={hendleSubmit}\n      validationSchema={validationSchema}\n    >\n      <Form>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          gridGap=\"25px\"\n        >\n          <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n          <ErrorMessage name=\"name\" render={msg => <Eror>{msg}</Eror>} />\n\n          <Input type=\"tel\" name=\"number\" placeholder=\"Telephone\" />\n          <ErrorMessage name=\"number\" render={msg => <Eror>{msg}</Eror>} />\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            type=\"submit\"\n          >\n            Add Contact\n          </Button>\n        </Box>\n      </Form>\n    </Formik>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact, selectFilter } from 'redux/contacts/filterSlice';\nimport { Formik } from 'formik';\nimport { Input } from 'commonStyle/Common.styled';\nimport { createContext } from 'react';\nexport const UseContext = createContext();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const valueFilter = useSelector(selectFilter);\n\n  const handlechange = query => {\n    dispatch(filterContact(query.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <Formik>\n      <Input\n        type=\"text\"\n        value={valueFilter}\n        onChange={handlechange}\n        placeholder=\"Filter Contacts\"\n      />\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { DeleteForever } from '@mui/icons-material';\n\nexport const ContactList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding: ${p => p.theme.space[3]}px;\n  gap: ${p => p.theme.space[3]};\n`;\n\nexport const ItemList = styled.li`\n  width: 100%;\n  color: white;\n`;\n\nexport const ItemListParagr = styled.p`\n  font-family: ${p => p.theme.fonts.monospace};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const ButtonIcon = styled(DeleteForever)`\n  color: white;\n  :hover {\n    cursor: pointer;\n    scale: 1.05;\n    color: red;\n  }\n`;\n","import { Box } from 'commonStyle/Common.styled';\nimport { ItemList, ItemListParagr, ButtonIcon } from './ListContact.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContact } from 'redux/contacts/contactsSlice';\nimport { fetchRemoveContact } from 'redux/contacts/operations';\nimport { selectFilter } from 'redux/contacts/filterSlice';\n\nexport const Renderlist = () => {\n  const dispatch = useDispatch();\n  const handleClickRemove = removeId => dispatch(fetchRemoveContact(removeId));\n  const selectorContact = useSelector(selectContact);\n  const selectorFilter = useSelector(selectFilter);\n\n  const renderContact = selectorContact.filter(item =>\n    item.name.toLowerCase().includes(selectorFilter)\n  );\n\n  return (\n    renderContact.length > 0 &&\n    renderContact.map(item => {\n      return (\n        <ItemList key={item.id}>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            gridGap=\"15px\"\n            justifyContent=\"flex-end\"\n          >\n            <Box display=\"flex\" alignItems=\"center\" gridGap=\"15px\">\n              <ItemListParagr>{item.name.toUpperCase()}</ItemListParagr>\n              <ItemListParagr>{item.number}</ItemListParagr>\n            </Box>\n            <ButtonIcon onClick={() => handleClickRemove(item.id)}></ButtonIcon>\n          </Box>\n        </ItemList>\n      );\n    })\n  );\n};\n","export const selectIsLoading = state => state.contacts.contact.isLoading;\nexport const selectError = state => state.contacts.contact.error;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { Box } from 'commonStyle/Common.styled';\nimport { Formes } from '../FormSection/Form';\nimport { Filter } from '../FilterSection/Filter';\nimport { Renderlist } from '../ListContact/ListContact';\nimport { ContactList } from '../ListContact/ListContact.styled';\nimport { fetchAllContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport const Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n    return () => {};\n  }, [dispatch]);\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      mt=\"10px\"\n      gridGap=\"10px\"\n    >\n      <Formes />\n      <Filter />\n\n      <ContactList>\n        <Renderlist />\n      </ContactList>\n      {isLoading && !error && (\n        <ThreeDots\n          height=\"20\"\n          width=\"20\"\n          radius=\"9\"\n          color=\"#ffd700\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { Conteier } from 'commonStyle/Common.styled';\n\nexport const ConteierContacts = styled(Conteier)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\n    url('https://mobimg.b-cdn.net/v3/fetch/e0/e007a64de6c3849b47548220b2367d3f.jpeg?h=900&r=0.5');\n`;\n\nexport const NameText = styled.p`\n  font-family: ${p => p.theme.fonts.monospace};\n  font-size: ${p => p.theme.fontSizes.sx};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.background};\n`;\n","import { Box, Links, icons } from 'commonStyle/Common.styled';\nimport { Phonebook } from 'components/PhoneBook/PhoneBook';\nimport { ConteierContacts, NameText } from './UserMenu.styled';\nimport { fetchLogOutUser } from 'redux/auth/authOperations';\nimport { Button } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authUserSelector, authTokenSelector } from 'redux/auth/authSlice';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction UserMenu() {\n  const location = useLocation();\n  const { name } = useSelector(authUserSelector);\n  const token = useSelector(authTokenSelector);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { IconsExpand, IconsCheckBox, IconsStanby, IconsRecord } = icons;\n\n  const handleLogOutUser = () => {\n    dispatch(fetchLogOutUser());\n    navigate('/');\n  };\n  return (\n    <>\n      <ConteierContacts>\n        <IconsRecord />\n        <Box\n          width=\"380px\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          gridGap={[20]}\n          px={[3]}\n        >\n          <NameText>Hello {name}</NameText>\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            type=\"button\"\n            onClick={handleLogOutUser}\n          >\n            Logout\n          </Button>\n        </Box>\n        {token && <Phonebook />}\n        <Box\n          display=\"flex\"\n          alignItems=\"flex-start\"\n          gridGap=\"20px\"\n          justifyContent=\"space-around\"\n          mt=\"auto\"\n          width=\"380px\"\n        >\n          <Links to={location.state?.from ?? '/'}>\n            <IconsExpand />\n          </Links>\n          <Links to={location.state?.from ?? '/'}>\n            <IconsStanby />\n          </Links>\n          <Links to={location.state?.from ?? '/'}>\n            <IconsCheckBox />\n          </Links>\n        </Box>\n      </ConteierContacts>\n    </>\n  );\n}\n\nexport default UserMenu;\n"],"names":["Eror","styled","p","theme","fonts","monospace","fontSizes","m","fontWeights","bold","colors","muted","validationSchema","Yup","shape","name","required","number","phone","initialValue","Formes","dispatch","useDispatch","contact","useSelector","selectContact","addContacsFormSubmit","value","find","item","Notiflix","fetchAddContacts","initialValues","onSubmit","values","resetForm","display","flexDirection","alignItems","justifyContent","gridGap","type","placeholder","render","msg","Button","variant","color","size","Filter","valueFilter","selectFilter","onChange","query","filterContact","target","toLowerCase","trim","ContactList","space","ItemList","ItemListParagr","white","ButtonIcon","DeleteForever","Renderlist","selectorContact","selectorFilter","renderContact","filter","includes","length","map","toUpperCase","onClick","removeId","id","fetchRemoveContact","selectIsLoading","state","contacts","isLoading","selectError","error","Phonebook","useEffect","fetchAllContacts","mt","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","ConteierContacts","Conteier","NameText","sx","background","location","useLocation","authUserSelector","token","authTokenSelector","navigate","useNavigate","IconsExpand","icons","IconsCheckBox","IconsStanby","IconsRecord","px","fetchLogOutUser","to","from"],"sourceRoot":""}